[source, csharp]
----
var client = this.Client;
var dict = new Dictionary<string, IResponse>();
dict.Add("fluent", fluent(RandomFluent, client, f => fluentBody(RandomFluent, f)));
dict.Add("fluentAsync", await fluentAsync(RandomFluentAsync, client, f => fluentBody(RandomFluentAsync, f)));
dict.Add("request", request(RandomInitializer, client, initializerBody(RandomInitializer)));
dict.Add("requestAsync", await requestAsync(RandomInitializerAsync, client, initializerBody(RandomInitializerAsync)));
await this._createResponse;
await this._createGetResponse;
await this._updateResponse;
await this._updateGetResponse;
await this._deleteResponse;
await this._deleteGetResponse;
var response = kv.Value as TResponse;
assert(response);
await this.AssertOnAllResponses(this._deleteResponse, assert);
await this.AssertOnAllResponses(this._deleteGetResponse, assert);
----
