[source, csharp]
----
s => s
.Consistency(Consistency.All)
.OpType(OpType.Index)
.Refresh()
.Routing("route")
----
[source, csharp]
----
new IndexRequest<Project>(this.Document)
{
	Refresh = true,
	OpType = OpType.Index,
	Consistency = Consistency.All,
	Routing = "route"
}
----
[source, csharp]
----
var indexName = this.RandomString();
var project = Project.Generator.Generate(1).First();
var indexResult = this.Client.Index(project, f => f
				.Index(indexName)
				.OpType(OpType.Create)
			);
indexResult.IsValid.Should().BeTrue();
indexResult.ApiCall.HttpStatusCode.Should().Be(201);
indexResult.Created.Should().BeTrue();
indexResult.Index.Should().Be(indexName);
indexResult.Type.Should().Be(this.Client.Infer.TypeName<Project>());
indexResult.Id.Should().Be(project.Name);
indexResult = this.Client.Index(project, f => f
				.Index(indexName)
				.OpType(OpType.Create)
			);
indexResult.IsValid.Should().BeFalse();
indexResult.Created.Should().BeFalse();
indexResult.ApiCall.HttpStatusCode.Should().Be(409);
var indexName = this.RandomString();
var project = Project.Generator.Generate(1).First();
var indexResult = this.Client.Index(project, f => f .Index(indexName));
indexResult.IsValid.Should().BeTrue();
indexResult.ApiCall.HttpStatusCode.Should().Be(201);
indexResult.Created.Should().BeTrue();
indexResult.Index.Should().Be(indexName);
indexResult.Type.Should().Be(this.Client.Infer.TypeName<Project>());
indexResult.Id.Should().Be(project.Name);
indexResult.Version.Should().Be(1);
indexResult = this.Client.Index(project, f => f .Index(indexName));
indexResult.IsValid.Should().BeTrue();
indexResult.Created.Should().BeFalse();
indexResult.ApiCall.HttpStatusCode.Should().Be(200);
indexResult.Version.Should().Be(2);
----
