
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Linq.Expressions;

//This file contains all the typed querystring parameters that are generated of the client spec.
//This file is automatically generated from https://github.com/elasticsearch/elasticsearch-rest-api-spec
//Generated of commit 

namespace Elasticsearch.Net
{
	
	///<summary>Request parameters descriptor for Bulk
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html
	///</pre>
	///</summary>
	public class BulkRequestParameters : FluentRequestParameters<BulkRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>Explicit write consistency setting for the operation</summary>
		public BulkRequestParameters Consistency(Consistency consistency) => this.AddQueryString("consistency", consistency);
		
		///<summary>Refresh the index after performing the operation</summary>
		public BulkRequestParameters Refresh(bool refresh) => this.AddQueryString("refresh", refresh);
		
		///<summary>Specific routing value</summary>
		public BulkRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		///<summary>Explicit operation timeout</summary>
		public BulkRequestParameters Timeout(string timeout) => this.AddQueryString("timeout", timeout);
		
		///<summary>Default document type for items which don&#39;t provide one</summary>
		public BulkRequestParameters Type(string type) => this.AddQueryString("type", type);
		
		///<summary>Default comma-separated list of fields to return in the response for updates</summary>
		public BulkRequestParameters Fields(params string[] fields) => this.AddQueryString("fields", fields);
		
		///<summary>The URL-encoded request definition</summary>
		public BulkRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public BulkRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatAliases
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-alias.html
	///</pre>
	///</summary>
	public class CatAliasesRequestParameters : FluentRequestParameters<CatAliasesRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public CatAliasesRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatAliasesRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatAliasesRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		///<summary>Return help information</summary>
		public CatAliasesRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatAliasesRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		///<summary>The URL-encoded request definition</summary>
		public CatAliasesRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public CatAliasesRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatAllocation
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-allocation.html
	///</pre>
	///</summary>
	public class CatAllocationRequestParameters : FluentRequestParameters<CatAllocationRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>The unit in which to display byte values</summary>
		public CatAllocationRequestParameters Bytes(Bytes bytes) => this.AddQueryString("bytes", bytes);
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public CatAllocationRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatAllocationRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatAllocationRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		///<summary>Return help information</summary>
		public CatAllocationRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatAllocationRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		///<summary>The URL-encoded request definition</summary>
		public CatAllocationRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public CatAllocationRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatCount
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-count.html
	///</pre>
	///</summary>
	public class CatCountRequestParameters : FluentRequestParameters<CatCountRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public CatCountRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatCountRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatCountRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		///<summary>Return help information</summary>
		public CatCountRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatCountRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		///<summary>The URL-encoded request definition</summary>
		public CatCountRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public CatCountRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatFielddata
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-fielddata.html
	///</pre>
	///</summary>
	public class CatFielddataRequestParameters : FluentRequestParameters<CatFielddataRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>The unit in which to display byte values</summary>
		public CatFielddataRequestParameters Bytes(Bytes bytes) => this.AddQueryString("bytes", bytes);
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public CatFielddataRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatFielddataRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatFielddataRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		///<summary>Return help information</summary>
		public CatFielddataRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatFielddataRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		///<summary>A comma-separated list of fields to return in the output</summary>
		public CatFielddataRequestParameters Fields(params string[] fields) => this.AddQueryString("fields", fields);
		
		///<summary>The URL-encoded request definition</summary>
		public CatFielddataRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public CatFielddataRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatHealth
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-health.html
	///</pre>
	///</summary>
	public class CatHealthRequestParameters : FluentRequestParameters<CatHealthRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public CatHealthRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatHealthRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatHealthRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		///<summary>Return help information</summary>
		public CatHealthRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		///<summary>Set to false to disable timestamping</summary>
		public CatHealthRequestParameters Ts(bool ts) => this.AddQueryString("ts", ts);
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatHealthRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		///<summary>The URL-encoded request definition</summary>
		public CatHealthRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public CatHealthRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatHelp
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat.html
	///</pre>
	///</summary>
	public class CatHelpRequestParameters : FluentRequestParameters<CatHelpRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Return help information</summary>
		public CatHelpRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		///<summary>The URL-encoded request definition</summary>
		public CatHelpRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public CatHelpRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatIndices
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-indices.html
	///</pre>
	///</summary>
	public class CatIndicesRequestParameters : FluentRequestParameters<CatIndicesRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>The unit in which to display byte values</summary>
		public CatIndicesRequestParameters Bytes(Bytes bytes) => this.AddQueryString("bytes", bytes);
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public CatIndicesRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatIndicesRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatIndicesRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		///<summary>Return help information</summary>
		public CatIndicesRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		///<summary>Set to true to return stats only for primary shards</summary>
		public CatIndicesRequestParameters Pri(bool pri) => this.AddQueryString("pri", pri);
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatIndicesRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		///<summary>The URL-encoded request definition</summary>
		public CatIndicesRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public CatIndicesRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatMaster
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-master.html
	///</pre>
	///</summary>
	public class CatMasterRequestParameters : FluentRequestParameters<CatMasterRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public CatMasterRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatMasterRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatMasterRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		///<summary>Return help information</summary>
		public CatMasterRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatMasterRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		///<summary>The URL-encoded request definition</summary>
		public CatMasterRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public CatMasterRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatNodeattrs
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodeattrs.html
	///</pre>
	///</summary>
	public class CatNodeattrsRequestParameters : FluentRequestParameters<CatNodeattrsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public CatNodeattrsRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatNodeattrsRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatNodeattrsRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		///<summary>Return help information</summary>
		public CatNodeattrsRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatNodeattrsRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		///<summary>The URL-encoded request definition</summary>
		public CatNodeattrsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public CatNodeattrsRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatNodes
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodes.html
	///</pre>
	///</summary>
	public class CatNodesRequestParameters : FluentRequestParameters<CatNodesRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public CatNodesRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatNodesRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatNodesRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		///<summary>Return help information</summary>
		public CatNodesRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatNodesRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		///<summary>The URL-encoded request definition</summary>
		public CatNodesRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public CatNodesRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatPendingTasks
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-pending-tasks.html
	///</pre>
	///</summary>
	public class CatPendingTasksRequestParameters : FluentRequestParameters<CatPendingTasksRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public CatPendingTasksRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatPendingTasksRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatPendingTasksRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		///<summary>Return help information</summary>
		public CatPendingTasksRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatPendingTasksRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		///<summary>The URL-encoded request definition</summary>
		public CatPendingTasksRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public CatPendingTasksRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatPlugins
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-plugins.html
	///</pre>
	///</summary>
	public class CatPluginsRequestParameters : FluentRequestParameters<CatPluginsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public CatPluginsRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatPluginsRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatPluginsRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		///<summary>Return help information</summary>
		public CatPluginsRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatPluginsRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		///<summary>The URL-encoded request definition</summary>
		public CatPluginsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public CatPluginsRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatRecovery
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-recovery.html
	///</pre>
	///</summary>
	public class CatRecoveryRequestParameters : FluentRequestParameters<CatRecoveryRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>The unit in which to display byte values</summary>
		public CatRecoveryRequestParameters Bytes(Bytes bytes) => this.AddQueryString("bytes", bytes);
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatRecoveryRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatRecoveryRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		///<summary>Return help information</summary>
		public CatRecoveryRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatRecoveryRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		///<summary>The URL-encoded request definition</summary>
		public CatRecoveryRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public CatRecoveryRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatSegments
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-segments.html
	///</pre>
	///</summary>
	public class CatSegmentsRequestParameters : FluentRequestParameters<CatSegmentsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Comma-separated list of column names to display</summary>
		public CatSegmentsRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		///<summary>Return help information</summary>
		public CatSegmentsRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatSegmentsRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		///<summary>The URL-encoded request definition</summary>
		public CatSegmentsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public CatSegmentsRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatShards
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-shards.html
	///</pre>
	///</summary>
	public class CatShardsRequestParameters : FluentRequestParameters<CatShardsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public CatShardsRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatShardsRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatShardsRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		///<summary>Return help information</summary>
		public CatShardsRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatShardsRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		///<summary>The URL-encoded request definition</summary>
		public CatShardsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public CatShardsRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatThreadPool
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-thread-pool.html
	///</pre>
	///</summary>
	public class CatThreadPoolRequestParameters : FluentRequestParameters<CatThreadPoolRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public CatThreadPoolRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatThreadPoolRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatThreadPoolRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		///<summary>Return help information</summary>
		public CatThreadPoolRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatThreadPoolRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		///<summary>Enables displaying the complete node ids</summary>
		public CatThreadPoolRequestParameters FullId(bool full_id) => this.AddQueryString("full_id", full_id);
		
		///<summary>The URL-encoded request definition</summary>
		public CatThreadPoolRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public CatThreadPoolRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for ClearScroll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-scroll.html
	///</pre>
	///</summary>
	public class ClearScrollRequestParameters : FluentRequestParameters<ClearScrollRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
		///<summary>The URL-encoded request definition</summary>
		public ClearScrollRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public ClearScrollRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for ClusterGetSettings
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html
	///</pre>
	///</summary>
	public class ClusterGetSettingsRequestParameters : FluentRequestParameters<ClusterGetSettingsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Return settings in flat format (default: false)</summary>
		public ClusterGetSettingsRequestParameters FlatSettings(bool flat_settings) => this.AddQueryString("flat_settings", flat_settings);
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public ClusterGetSettingsRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Explicit operation timeout</summary>
		public ClusterGetSettingsRequestParameters Timeout(string timeout) => this.AddQueryString("timeout", timeout);
		
		///<summary>The URL-encoded request definition</summary>
		public ClusterGetSettingsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public ClusterGetSettingsRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for ClusterHealth
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-health.html
	///</pre>
	///</summary>
	public class ClusterHealthRequestParameters : FluentRequestParameters<ClusterHealthRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Specify the level of detail for returned information</summary>
		public ClusterHealthRequestParameters Level(Level level) => this.AddQueryString("level", level);
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public ClusterHealthRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public ClusterHealthRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Explicit operation timeout</summary>
		public ClusterHealthRequestParameters Timeout(string timeout) => this.AddQueryString("timeout", timeout);
		
		///<summary>Wait until the specified number of shards is active</summary>
		public ClusterHealthRequestParameters WaitForActiveShards(long wait_for_active_shards) => this.AddQueryString("wait_for_active_shards", wait_for_active_shards);
		
		///<summary>Wait until the specified number of nodes is available</summary>
		public ClusterHealthRequestParameters WaitForNodes(string wait_for_nodes) => this.AddQueryString("wait_for_nodes", wait_for_nodes);
		
		///<summary>Wait until the specified number of relocating shards is finished</summary>
		public ClusterHealthRequestParameters WaitForRelocatingShards(long wait_for_relocating_shards) => this.AddQueryString("wait_for_relocating_shards", wait_for_relocating_shards);
		
		///<summary>Wait until cluster is in a specific state</summary>
		public ClusterHealthRequestParameters WaitForStatus(WaitForStatus wait_for_status) => this.AddQueryString("wait_for_status", wait_for_status);
		
		///<summary>The URL-encoded request definition</summary>
		public ClusterHealthRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public ClusterHealthRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for ClusterPendingTasks
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-pending.html
	///</pre>
	///</summary>
	public class ClusterPendingTasksRequestParameters : FluentRequestParameters<ClusterPendingTasksRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public ClusterPendingTasksRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>Specify timeout for connection to master</summary>
		public ClusterPendingTasksRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>The URL-encoded request definition</summary>
		public ClusterPendingTasksRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public ClusterPendingTasksRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for ClusterPutSettings
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html
	///</pre>
	///</summary>
	public class ClusterPutSettingsRequestParameters : FluentRequestParameters<ClusterPutSettingsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		///<summary>Return settings in flat format (default: false)</summary>
		public ClusterPutSettingsRequestParameters FlatSettings(bool flat_settings) => this.AddQueryString("flat_settings", flat_settings);
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public ClusterPutSettingsRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Explicit operation timeout</summary>
		public ClusterPutSettingsRequestParameters Timeout(string timeout) => this.AddQueryString("timeout", timeout);
		
		///<summary>The URL-encoded request definition</summary>
		public ClusterPutSettingsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public ClusterPutSettingsRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for ClusterReroute
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-reroute.html
	///</pre>
	///</summary>
	public class ClusterRerouteRequestParameters : FluentRequestParameters<ClusterRerouteRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>Simulate the operation only and return the resulting state</summary>
		public ClusterRerouteRequestParameters DryRun(bool dry_run) => this.AddQueryString("dry_run", dry_run);
		
		///<summary>Return an explanation of why the commands can or cannot be executed</summary>
		public ClusterRerouteRequestParameters Explain(bool explain) => this.AddQueryString("explain", explain);
		
		///<summary>Limit the information returned to the specified metrics. Defaults to all but metadata</summary>
		public ClusterRerouteRequestParameters Metric(params string[] metric) => this.AddQueryString("metric", metric);
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public ClusterRerouteRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Explicit operation timeout</summary>
		public ClusterRerouteRequestParameters Timeout(string timeout) => this.AddQueryString("timeout", timeout);
		
		///<summary>The URL-encoded request definition</summary>
		public ClusterRerouteRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public ClusterRerouteRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for ClusterState
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-state.html
	///</pre>
	///</summary>
	public class ClusterStateRequestParameters : FluentRequestParameters<ClusterStateRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public ClusterStateRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>Specify timeout for connection to master</summary>
		public ClusterStateRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Return settings in flat format (default: false)</summary>
		public ClusterStateRequestParameters FlatSettings(bool flat_settings) => this.AddQueryString("flat_settings", flat_settings);
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public ClusterStateRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public ClusterStateRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public ClusterStateRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>The URL-encoded request definition</summary>
		public ClusterStateRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public ClusterStateRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for ClusterStats
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-stats.html
	///</pre>
	///</summary>
	public class ClusterStatsRequestParameters : FluentRequestParameters<ClusterStatsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Return settings in flat format (default: false)</summary>
		public ClusterStatsRequestParameters FlatSettings(bool flat_settings) => this.AddQueryString("flat_settings", flat_settings);
		
		///<summary>Whether to return time and byte values in human-readable format.</summary>
		public ClusterStatsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		///<summary>Explicit operation timeout</summary>
		public ClusterStatsRequestParameters Timeout(string timeout) => this.AddQueryString("timeout", timeout);
		
		///<summary>The URL-encoded request definition</summary>
		public ClusterStatsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public ClusterStatsRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Count
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html
	///</pre>
	///</summary>
	public class CountRequestParameters : FluentRequestParameters<CountRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public CountRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public CountRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public CountRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>Include only documents with a specific `_score` value in the result</summary>
		public CountRequestParameters MinScore(double min_score) => this.AddQueryString("min_score", min_score);
		
		///<summary>Specify the node or shard the operation should be performed on (default: random)</summary>
		public CountRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		///<summary>Specific routing value</summary>
		public CountRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		///<summary>Query in the Lucene query string syntax</summary>
		public CountRequestParameters QueryOnQueryString(string query_on_query_string) => this.AddQueryString("q", query_on_query_string);
		
		///<summary>The analyzer to use for the query string</summary>
		public CountRequestParameters Analyzer(string analyzer) => this.AddQueryString("analyzer", analyzer);
		
		///<summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
		public CountRequestParameters AnalyzeWildcard(bool analyze_wildcard) => this.AddQueryString("analyze_wildcard", analyze_wildcard);
		
		///<summary>The default operator for query string query (AND or OR)</summary>
		public CountRequestParameters DefaultOperator(DefaultOperator default_operator) => this.AddQueryString("default_operator", default_operator);
		
		///<summary>The field to use as default where no field prefix is given in the query string</summary>
		public CountRequestParameters Df(string df) => this.AddQueryString("df", df);
		
		///<summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
		public CountRequestParameters Lenient(bool lenient) => this.AddQueryString("lenient", lenient);
		
		///<summary>Specify whether query terms should be lowercased</summary>
		public CountRequestParameters LowercaseExpandedTerms(bool lowercase_expanded_terms) => this.AddQueryString("lowercase_expanded_terms", lowercase_expanded_terms);
		
		///<summary>The URL-encoded request definition</summary>
		public CountRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public CountRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CountPercolate
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-percolate.html
	///</pre>
	///</summary>
	public class PercolateCountRequestParameters : FluentRequestParameters<PercolateCountRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>A comma-separated list of specific routing values</summary>
		public PercolateCountRequestParameters Routing(params string[] routing) => this.AddQueryString("routing", routing);
		
		///<summary>Specify the node or shard the operation should be performed on (default: random)</summary>
		public PercolateCountRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public PercolateCountRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public PercolateCountRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public PercolateCountRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>The index to count percolate the document into. Defaults to index.</summary>
		public PercolateCountRequestParameters PercolateIndex(string percolate_index) => this.AddQueryString("percolate_index", percolate_index);
		
		///<summary>The type to count percolate document into. Defaults to type.</summary>
		public PercolateCountRequestParameters PercolateType(string percolate_type) => this.AddQueryString("percolate_type", percolate_type);
		
		///<summary>Explicit version number for concurrency control</summary>
		public PercolateCountRequestParameters Version(long version) => this.AddQueryString("version", version);
		
		///<summary>Specific version type</summary>
		public PercolateCountRequestParameters VersionType(VersionType version_type) => this.AddQueryString("version_type", version_type);
		
		///<summary>The URL-encoded request definition</summary>
		public PercolateCountRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public PercolateCountRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Delete
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html
	///</pre>
	///</summary>
	public class DeleteRequestParameters : FluentRequestParameters<DeleteRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
		///<summary>Specific write consistency setting for the operation</summary>
		public DeleteRequestParameters Consistency(Consistency consistency) => this.AddQueryString("consistency", consistency);
		
		///<summary>ID of parent document</summary>
		public DeleteRequestParameters Parent(string parent) => this.AddQueryString("parent", parent);
		
		///<summary>Refresh the index after performing the operation</summary>
		public DeleteRequestParameters Refresh(bool refresh) => this.AddQueryString("refresh", refresh);
		
		///<summary>Specific routing value</summary>
		public DeleteRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		///<summary>Explicit operation timeout</summary>
		public DeleteRequestParameters Timeout(string timeout) => this.AddQueryString("timeout", timeout);
		
		///<summary>Explicit version number for concurrency control</summary>
		public DeleteRequestParameters Version(long version) => this.AddQueryString("version", version);
		
		///<summary>Specific version type</summary>
		public DeleteRequestParameters VersionType(VersionType version_type) => this.AddQueryString("version_type", version_type);
		
		///<summary>The URL-encoded request definition</summary>
		public DeleteRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public DeleteRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for DeleteByQuery
	///<pre>
	///https://www.elastic.co/guide/en/elasticsearch/plugins/2.0/plugins-delete-by-query.html
	///</pre>
	///</summary>
	public class DeleteByQueryRequestParameters : FluentRequestParameters<DeleteByQueryRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
		///<summary>The analyzer to use for the query string</summary>
		public DeleteByQueryRequestParameters Analyzer(string analyzer) => this.AddQueryString("analyzer", analyzer);
		
		///<summary>The default operator for query string query (AND or OR)</summary>
		public DeleteByQueryRequestParameters DefaultOperator(DefaultOperator default_operator) => this.AddQueryString("default_operator", default_operator);
		
		///<summary>The field to use as default where no field prefix is given in the query string</summary>
		public DeleteByQueryRequestParameters Df(string df) => this.AddQueryString("df", df);
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public DeleteByQueryRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public DeleteByQueryRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public DeleteByQueryRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>Query in the Lucene query string syntax</summary>
		public DeleteByQueryRequestParameters QueryOnQueryString(string query_on_query_string) => this.AddQueryString("q", query_on_query_string);
		
		///<summary>Specific routing value</summary>
		public DeleteByQueryRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		///<summary>The URL-encoded query definition (instead of using the request body)</summary>
		public DeleteByQueryRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Explicit operation timeout</summary>
		public DeleteByQueryRequestParameters Timeout(string timeout) => this.AddQueryString("timeout", timeout);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public DeleteByQueryRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for DeleteScript
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html
	///</pre>
	///</summary>
	public class DeleteScriptRequestParameters : FluentRequestParameters<DeleteScriptRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
		///<summary>Explicit version number for concurrency control</summary>
		public DeleteScriptRequestParameters Version(long version) => this.AddQueryString("version", version);
		
		///<summary>Specific version type</summary>
		public DeleteScriptRequestParameters VersionType(VersionType version_type) => this.AddQueryString("version_type", version_type);
		
		///<summary>The URL-encoded request definition</summary>
		public DeleteScriptRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public DeleteScriptRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for DeleteTemplate
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-template.html
	///</pre>
	///</summary>
	public class DeleteSearchTemplateRequestParameters : FluentRequestParameters<DeleteSearchTemplateRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
		///<summary>Explicit version number for concurrency control</summary>
		public DeleteSearchTemplateRequestParameters Version(long version) => this.AddQueryString("version", version);
		
		///<summary>Specific version type</summary>
		public DeleteSearchTemplateRequestParameters VersionType(VersionType version_type) => this.AddQueryString("version_type", version_type);
		
		///<summary>The URL-encoded request definition</summary>
		public DeleteSearchTemplateRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public DeleteSearchTemplateRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Exists
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html
	///</pre>
	///</summary>
	public class DocumentExistsRequestParameters : FluentRequestParameters<DocumentExistsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.HEAD;
		///<summary>The ID of the parent document</summary>
		public DocumentExistsRequestParameters Parent(string parent) => this.AddQueryString("parent", parent);
		
		///<summary>Specify the node or shard the operation should be performed on (default: random)</summary>
		public DocumentExistsRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		///<summary>Specify whether to perform the operation in realtime or search mode</summary>
		public DocumentExistsRequestParameters Realtime(bool realtime) => this.AddQueryString("realtime", realtime);
		
		///<summary>Refresh the shard containing the document before performing the operation</summary>
		public DocumentExistsRequestParameters Refresh(bool refresh) => this.AddQueryString("refresh", refresh);
		
		///<summary>Specific routing value</summary>
		public DocumentExistsRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		///<summary>The URL-encoded request definition</summary>
		public DocumentExistsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public DocumentExistsRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Explain
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html
	///</pre>
	///</summary>
	public class ExplainRequestParameters : FluentRequestParameters<ExplainRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)</summary>
		public ExplainRequestParameters AnalyzeWildcard(bool analyze_wildcard) => this.AddQueryString("analyze_wildcard", analyze_wildcard);
		
		///<summary>The analyzer for the query string query</summary>
		public ExplainRequestParameters Analyzer(string analyzer) => this.AddQueryString("analyzer", analyzer);
		
		///<summary>The default operator for query string query (AND or OR)</summary>
		public ExplainRequestParameters DefaultOperator(DefaultOperator default_operator) => this.AddQueryString("default_operator", default_operator);
		
		///<summary>The default field for query string query (default: _all)</summary>
		public ExplainRequestParameters Df(string df) => this.AddQueryString("df", df);
		
		///<summary>A comma-separated list of fields to return in the response</summary>
		public ExplainRequestParameters Fields(params string[] fields) => this.AddQueryString("fields", fields);
		
		///<summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
		public ExplainRequestParameters Lenient(bool lenient) => this.AddQueryString("lenient", lenient);
		
		///<summary>Specify whether query terms should be lowercased</summary>
		public ExplainRequestParameters LowercaseExpandedTerms(bool lowercase_expanded_terms) => this.AddQueryString("lowercase_expanded_terms", lowercase_expanded_terms);
		
		///<summary>The ID of the parent document</summary>
		public ExplainRequestParameters Parent(string parent) => this.AddQueryString("parent", parent);
		
		///<summary>Specify the node or shard the operation should be performed on (default: random)</summary>
		public ExplainRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		///<summary>Query in the Lucene query string syntax</summary>
		public ExplainRequestParameters QueryOnQueryString(string query_on_query_string) => this.AddQueryString("q", query_on_query_string);
		
		///<summary>Specific routing value</summary>
		public ExplainRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		///<summary>True or false to return the _source field or not, or a list of fields to return</summary>
		public ExplainRequestParameters SourceEnabled(params string[] source_enabled) => this.AddQueryString("_source", source_enabled);
		
		///<summary>A list of fields to exclude from the returned _source field</summary>
		public ExplainRequestParameters SourceExclude(params string[] source_exclude) => this.AddQueryString("_source_exclude", source_exclude);
		
		///<summary>A list of fields to extract and return from the _source field</summary>
		public ExplainRequestParameters SourceInclude(params string[] source_include) => this.AddQueryString("_source_include", source_include);
		
		///<summary>The URL-encoded request definition</summary>
		public ExplainRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public ExplainRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for FieldStats
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html
	///</pre>
	///</summary>
	public class FieldStatsRequestParameters : FluentRequestParameters<FieldStatsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>A comma-separated list of fields for to get field statistics for (min value, max value, and more)</summary>
		public FieldStatsRequestParameters Fields(params string[] fields) => this.AddQueryString("fields", fields);
		
		///<summary>Defines if field stats should be returned on a per index level or on a cluster wide level</summary>
		public FieldStatsRequestParameters Level(Level level) => this.AddQueryString("level", level);
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public FieldStatsRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public FieldStatsRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public FieldStatsRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>The URL-encoded request definition</summary>
		public FieldStatsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public FieldStatsRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Get
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html
	///</pre>
	///</summary>
	public class GetRequestParameters : FluentRequestParameters<GetRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>A comma-separated list of fields to return in the response</summary>
		public GetRequestParameters Fields(params string[] fields) => this.AddQueryString("fields", fields);
		
		///<summary>The ID of the parent document</summary>
		public GetRequestParameters Parent(string parent) => this.AddQueryString("parent", parent);
		
		///<summary>Specify the node or shard the operation should be performed on (default: random)</summary>
		public GetRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		///<summary>Specify whether to perform the operation in realtime or search mode</summary>
		public GetRequestParameters Realtime(bool realtime) => this.AddQueryString("realtime", realtime);
		
		///<summary>Refresh the shard containing the document before performing the operation</summary>
		public GetRequestParameters Refresh(bool refresh) => this.AddQueryString("refresh", refresh);
		
		///<summary>Specific routing value</summary>
		public GetRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		///<summary>True or false to return the _source field or not, or a list of fields to return</summary>
		public GetRequestParameters SourceEnabled(params string[] source_enabled) => this.AddQueryString("_source", source_enabled);
		
		///<summary>A list of fields to exclude from the returned _source field</summary>
		public GetRequestParameters SourceExclude(params string[] source_exclude) => this.AddQueryString("_source_exclude", source_exclude);
		
		///<summary>A list of fields to extract and return from the _source field</summary>
		public GetRequestParameters SourceInclude(params string[] source_include) => this.AddQueryString("_source_include", source_include);
		
		///<summary>Explicit version number for concurrency control</summary>
		public GetRequestParameters Version(long version) => this.AddQueryString("version", version);
		
		///<summary>Specific version type</summary>
		public GetRequestParameters VersionType(VersionType version_type) => this.AddQueryString("version_type", version_type);
		
		///<summary>The URL-encoded request definition</summary>
		public GetRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public GetRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for GetScript
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html
	///</pre>
	///</summary>
	public class GetScriptRequestParameters : FluentRequestParameters<GetScriptRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Explicit version number for concurrency control</summary>
		public GetScriptRequestParameters Version(long version) => this.AddQueryString("version", version);
		
		///<summary>Specific version type</summary>
		public GetScriptRequestParameters VersionType(VersionType version_type) => this.AddQueryString("version_type", version_type);
		
		///<summary>The URL-encoded request definition</summary>
		public GetScriptRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public GetScriptRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for GetSource
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html
	///</pre>
	///</summary>
	public class SourceRequestParameters : FluentRequestParameters<SourceRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>The ID of the parent document</summary>
		public SourceRequestParameters Parent(string parent) => this.AddQueryString("parent", parent);
		
		///<summary>Specify the node or shard the operation should be performed on (default: random)</summary>
		public SourceRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		///<summary>Specify whether to perform the operation in realtime or search mode</summary>
		public SourceRequestParameters Realtime(bool realtime) => this.AddQueryString("realtime", realtime);
		
		///<summary>Refresh the shard containing the document before performing the operation</summary>
		public SourceRequestParameters Refresh(bool refresh) => this.AddQueryString("refresh", refresh);
		
		///<summary>Specific routing value</summary>
		public SourceRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		///<summary>True or false to return the _source field or not, or a list of fields to return</summary>
		public SourceRequestParameters SourceEnabled(params string[] source_enabled) => this.AddQueryString("_source", source_enabled);
		
		///<summary>A list of fields to exclude from the returned _source field</summary>
		public SourceRequestParameters SourceExclude(params string[] source_exclude) => this.AddQueryString("_source_exclude", source_exclude);
		
		///<summary>A list of fields to extract and return from the _source field</summary>
		public SourceRequestParameters SourceInclude(params string[] source_include) => this.AddQueryString("_source_include", source_include);
		
		///<summary>Explicit version number for concurrency control</summary>
		public SourceRequestParameters Version(long version) => this.AddQueryString("version", version);
		
		///<summary>Specific version type</summary>
		public SourceRequestParameters VersionType(VersionType version_type) => this.AddQueryString("version_type", version_type);
		
		///<summary>The URL-encoded request definition</summary>
		public SourceRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public SourceRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for GetTemplate
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-template.html
	///</pre>
	///</summary>
	public class GetSearchTemplateRequestParameters : FluentRequestParameters<GetSearchTemplateRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Explicit version number for concurrency control</summary>
		public GetSearchTemplateRequestParameters Version(long version) => this.AddQueryString("version", version);
		
		///<summary>Specific version type</summary>
		public GetSearchTemplateRequestParameters VersionType(VersionType version_type) => this.AddQueryString("version_type", version_type);
		
		///<summary>The URL-encoded request definition</summary>
		public GetSearchTemplateRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public GetSearchTemplateRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Index
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html
	///</pre>
	///</summary>
	public class IndexRequestParameters : FluentRequestParameters<IndexRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>Explicit write consistency setting for the operation</summary>
		public IndexRequestParameters Consistency(Consistency consistency) => this.AddQueryString("consistency", consistency);
		
		///<summary>Explicit operation type</summary>
		public IndexRequestParameters OpType(OpType op_type) => this.AddQueryString("op_type", op_type);
		
		///<summary>ID of the parent document</summary>
		public IndexRequestParameters Parent(string parent) => this.AddQueryString("parent", parent);
		
		///<summary>Refresh the index after performing the operation</summary>
		public IndexRequestParameters Refresh(bool refresh) => this.AddQueryString("refresh", refresh);
		
		///<summary>Specific routing value</summary>
		public IndexRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		///<summary>Explicit operation timeout</summary>
		public IndexRequestParameters Timeout(string timeout) => this.AddQueryString("timeout", timeout);
		
		///<summary>Explicit timestamp for the document</summary>
		public IndexRequestParameters Timestamp(string timestamp) => this.AddQueryString("timestamp", timestamp);
		
		///<summary>Expiration time for the document</summary>
		public IndexRequestParameters Ttl(string ttl) => this.AddQueryString("ttl", ttl);
		
		///<summary>Explicit version number for concurrency control</summary>
		public IndexRequestParameters Version(long version) => this.AddQueryString("version", version);
		
		///<summary>Specific version type</summary>
		public IndexRequestParameters VersionType(VersionType version_type) => this.AddQueryString("version_type", version_type);
		
		///<summary>The URL-encoded request definition</summary>
		public IndexRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public IndexRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesAnalyzeForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html
	///</pre>
	///</summary>
	public class AnalyzeRequestParameters : FluentRequestParameters<AnalyzeRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>The name of the analyzer to use</summary>
		public AnalyzeRequestParameters Analyzer(string analyzer) => this.AddQueryString("analyzer", analyzer);
		
		///<summary>A comma-separated list of character filters to use for the analysis</summary>
		public AnalyzeRequestParameters CharFilters(params string[] char_filters) => this.AddQueryString("char_filters", char_filters);
		
		///<summary>Use the analyzer configured for this field (instead of passing the analyzer name)</summary>
		public AnalyzeRequestParameters Field(string field) => this.AddQueryString("field", field);
		
		///<summary>A comma-separated list of filters to use for the analysis</summary>
		public AnalyzeRequestParameters Filters(params string[] filters) => this.AddQueryString("filters", filters);
		
		///<summary>The name of the index to scope the operation</summary>
		public AnalyzeRequestParameters Index(string index) => this.AddQueryString("index", index);
		
		///<summary>With `true`, specify that a local shard should be used if available, with `false`, use a random shard (default: true)</summary>
		public AnalyzeRequestParameters PreferLocal(bool prefer_local) => this.AddQueryString("prefer_local", prefer_local);
		
		///<summary>The text on which the analysis should be performed (when request body is not used)</summary>
		public AnalyzeRequestParameters Text(params string[] text) => this.AddQueryString("text", text);
		
		///<summary>The name of the tokenizer to use for the analysis</summary>
		public AnalyzeRequestParameters Tokenizer(string tokenizer) => this.AddQueryString("tokenizer", tokenizer);
		
		///<summary>Format of the output</summary>
		public AnalyzeRequestParameters Format(Format format) => this.AddQueryString("format", format);
		
		///<summary>The URL-encoded request definition</summary>
		public AnalyzeRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public AnalyzeRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesClearCacheForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clearcache.html
	///</pre>
	///</summary>
	public class ClearCacheRequestParameters : FluentRequestParameters<ClearCacheRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>Clear field data</summary>
		public ClearCacheRequestParameters FieldData(bool field_data) => this.AddQueryString("field_data", field_data);
		
		///<summary>A comma-separated list of fields to clear when using the `field_data` parameter (default: all)</summary>
		public ClearCacheRequestParameters Fields(params string[] fields) => this.AddQueryString("fields", fields);
		
		///<summary>Clear query caches</summary>
		public ClearCacheRequestParameters Query(bool query) => this.AddQueryString("query", query);
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public ClearCacheRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public ClearCacheRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public ClearCacheRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>A comma-separated list of index name to limit the operation</summary>
		public ClearCacheRequestParameters Index(params string[] index) => this.AddQueryString("index", index);
		
		///<summary>Clear the recycler cache</summary>
		public ClearCacheRequestParameters Recycler(bool recycler) => this.AddQueryString("recycler", recycler);
		
		///<summary>Clear request cache</summary>
		public ClearCacheRequestParameters Request(bool request) => this.AddQueryString("request", request);
		
		///<summary>The URL-encoded request definition</summary>
		public ClearCacheRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public ClearCacheRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesClose
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html
	///</pre>
	///</summary>
	public class CloseIndexRequestParameters : FluentRequestParameters<CloseIndexRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>Explicit operation timeout</summary>
		public CloseIndexRequestParameters Timeout(string timeout) => this.AddQueryString("timeout", timeout);
		
		///<summary>Specify timeout for connection to master</summary>
		public CloseIndexRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public CloseIndexRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public CloseIndexRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public CloseIndexRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>The URL-encoded request definition</summary>
		public CloseIndexRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public CloseIndexRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesCreate
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-create-index.html
	///</pre>
	///</summary>
	public class CreateIndexRequestParameters : FluentRequestParameters<CreateIndexRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		///<summary>Explicit operation timeout</summary>
		public CreateIndexRequestParameters Timeout(string timeout) => this.AddQueryString("timeout", timeout);
		
		///<summary>Specify timeout for connection to master</summary>
		public CreateIndexRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Whether to update the mapping for all fields with the same name across all types or not</summary>
		public CreateIndexRequestParameters UpdateAllTypes(bool update_all_types) => this.AddQueryString("update_all_types", update_all_types);
		
		///<summary>The URL-encoded request definition</summary>
		public CreateIndexRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public CreateIndexRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesDelete
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-delete-index.html
	///</pre>
	///</summary>
	public class DeleteIndexRequestParameters : FluentRequestParameters<DeleteIndexRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
		///<summary>Explicit operation timeout</summary>
		public DeleteIndexRequestParameters Timeout(string timeout) => this.AddQueryString("timeout", timeout);
		
		///<summary>Specify timeout for connection to master</summary>
		public DeleteIndexRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>The URL-encoded request definition</summary>
		public DeleteIndexRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public DeleteIndexRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesDeleteAlias
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html
	///</pre>
	///</summary>
	public class DeleteAliasRequestParameters : FluentRequestParameters<DeleteAliasRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
		///<summary>Explicit timestamp for the document</summary>
		public DeleteAliasRequestParameters Timeout(string timeout) => this.AddQueryString("timeout", timeout);
		
		///<summary>Specify timeout for connection to master</summary>
		public DeleteAliasRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>The URL-encoded request definition</summary>
		public DeleteAliasRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public DeleteAliasRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesDeleteTemplateForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html
	///</pre>
	///</summary>
	public class DeleteIndexTemplateRequestParameters : FluentRequestParameters<DeleteIndexTemplateRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
		///<summary>Explicit operation timeout</summary>
		public DeleteIndexTemplateRequestParameters Timeout(string timeout) => this.AddQueryString("timeout", timeout);
		
		///<summary>Specify timeout for connection to master</summary>
		public DeleteIndexTemplateRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>The URL-encoded request definition</summary>
		public DeleteIndexTemplateRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public DeleteIndexTemplateRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesDeleteWarmer
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-warmers.html
	///</pre>
	///</summary>
	public class DeleteWarmerRequestParameters : FluentRequestParameters<DeleteWarmerRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
		///<summary>Specify timeout for connection to master</summary>
		public DeleteWarmerRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>The URL-encoded request definition</summary>
		public DeleteWarmerRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public DeleteWarmerRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesExists
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-exists.html
	///</pre>
	///</summary>
	public class IndexExistsRequestParameters : FluentRequestParameters<IndexExistsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.HEAD;
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public IndexExistsRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public IndexExistsRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public IndexExistsRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public IndexExistsRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>The URL-encoded request definition</summary>
		public IndexExistsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public IndexExistsRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesExistsAliasForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html
	///</pre>
	///</summary>
	public class AliasExistsRequestParameters : FluentRequestParameters<AliasExistsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.HEAD;
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public AliasExistsRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public AliasExistsRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public AliasExistsRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public AliasExistsRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>The URL-encoded request definition</summary>
		public AliasExistsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public AliasExistsRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesExistsTemplateForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html
	///</pre>
	///</summary>
	public class IndexTemplateExistsRequestParameters : FluentRequestParameters<IndexTemplateExistsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.HEAD;
		///<summary>Explicit operation timeout for connection to master node</summary>
		public IndexTemplateExistsRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public IndexTemplateExistsRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>The URL-encoded request definition</summary>
		public IndexTemplateExistsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public IndexTemplateExistsRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesExistsType
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-types-exists.html
	///</pre>
	///</summary>
	public class TypeExistsRequestParameters : FluentRequestParameters<TypeExistsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.HEAD;
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public TypeExistsRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public TypeExistsRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public TypeExistsRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public TypeExistsRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>The URL-encoded request definition</summary>
		public TypeExistsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public TypeExistsRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesFlushForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html
	///</pre>
	///</summary>
	public class FlushRequestParameters : FluentRequestParameters<FlushRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>Whether a flush should be forced even if it is not necessarily needed ie. if no changes will be committed to the index. This is useful if transaction log IDs should be incremented even if no uncommitted changes are present. (This setting can be considered as internal)</summary>
		public FlushRequestParameters Force(bool force) => this.AddQueryString("force", force);
		
		///<summary>If set to true the flush operation will block until the flush can be executed if another flush operation is already executing. The default is false and will cause an exception to be thrown on the shard level if another flush operation is already running.</summary>
		public FlushRequestParameters WaitIfOngoing(bool wait_if_ongoing) => this.AddQueryString("wait_if_ongoing", wait_if_ongoing);
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public FlushRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public FlushRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public FlushRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>The URL-encoded request definition</summary>
		public FlushRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public FlushRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesFlushSyncedForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-synced-flush.html
	///</pre>
	///</summary>
	public class SyncedFlushRequestParameters : FluentRequestParameters<SyncedFlushRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public SyncedFlushRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public SyncedFlushRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public SyncedFlushRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>The URL-encoded request definition</summary>
		public SyncedFlushRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public SyncedFlushRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesGet
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-index.html
	///</pre>
	///</summary>
	public class GetIndexRequestParameters : FluentRequestParameters<GetIndexRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public GetIndexRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>Ignore unavailable indexes (default: false)</summary>
		public GetIndexRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Ignore if a wildcard expression resolves to no concrete indices (default: false)</summary>
		public GetIndexRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether wildcard expressions should get expanded to open or closed indices (default: open)</summary>
		public GetIndexRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>Return settings in flat format (default: false)</summary>
		public GetIndexRequestParameters FlatSettings(bool flat_settings) => this.AddQueryString("flat_settings", flat_settings);
		
		///<summary>Whether to return version and creation date values in human-readable format.</summary>
		public GetIndexRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		///<summary>The URL-encoded request definition</summary>
		public GetIndexRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public GetIndexRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesGetAliasForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html
	///</pre>
	///</summary>
	public class GetAliasRequestParameters : FluentRequestParameters<GetAliasRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public GetAliasRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public GetAliasRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public GetAliasRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public GetAliasRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>The URL-encoded request definition</summary>
		public GetAliasRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public GetAliasRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesGetAliasesForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html
	///</pre>
	///</summary>
	public class GetAliasesRequestParameters : FluentRequestParameters<GetAliasesRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Explicit operation timeout</summary>
		public GetAliasesRequestParameters Timeout(string timeout) => this.AddQueryString("timeout", timeout);
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public GetAliasesRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>The URL-encoded request definition</summary>
		public GetAliasesRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public GetAliasesRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesGetFieldMappingForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html
	///</pre>
	///</summary>
	public class GetFieldMappingRequestParameters : FluentRequestParameters<GetFieldMappingRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Whether the default mapping values should be returned as well</summary>
		public GetFieldMappingRequestParameters IncludeDefaults(bool include_defaults) => this.AddQueryString("include_defaults", include_defaults);
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public GetFieldMappingRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public GetFieldMappingRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public GetFieldMappingRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public GetFieldMappingRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>The URL-encoded request definition</summary>
		public GetFieldMappingRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public GetFieldMappingRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesGetMappingForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-mapping.html
	///</pre>
	///</summary>
	public class GetMappingRequestParameters : FluentRequestParameters<GetMappingRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public GetMappingRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public GetMappingRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public GetMappingRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public GetMappingRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>The URL-encoded request definition</summary>
		public GetMappingRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public GetMappingRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesGetSettingsForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-settings.html
	///</pre>
	///</summary>
	public class GetIndexSettingsRequestParameters : FluentRequestParameters<GetIndexSettingsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public GetIndexSettingsRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public GetIndexSettingsRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public GetIndexSettingsRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>Return settings in flat format (default: false)</summary>
		public GetIndexSettingsRequestParameters FlatSettings(bool flat_settings) => this.AddQueryString("flat_settings", flat_settings);
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public GetIndexSettingsRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>Whether to return version and creation date values in human-readable format.</summary>
		public GetIndexSettingsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		///<summary>The URL-encoded request definition</summary>
		public GetIndexSettingsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public GetIndexSettingsRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesGetTemplateForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html
	///</pre>
	///</summary>
	public class GetIndexTemplateRequestParameters : FluentRequestParameters<GetIndexTemplateRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Return settings in flat format (default: false)</summary>
		public GetIndexTemplateRequestParameters FlatSettings(bool flat_settings) => this.AddQueryString("flat_settings", flat_settings);
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public GetIndexTemplateRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public GetIndexTemplateRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>The URL-encoded request definition</summary>
		public GetIndexTemplateRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public GetIndexTemplateRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesGetUpgradeForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-upgrade.html
	///</pre>
	///</summary>
	public class UpgradeStatusRequestParameters : FluentRequestParameters<UpgradeStatusRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public UpgradeStatusRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public UpgradeStatusRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public UpgradeStatusRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>Whether to return time and byte values in human-readable format.</summary>
		public UpgradeStatusRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		///<summary>The URL-encoded request definition</summary>
		public UpgradeStatusRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public UpgradeStatusRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesGetWarmerForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-warmers.html
	///</pre>
	///</summary>
	public class GetWarmerRequestParameters : FluentRequestParameters<GetWarmerRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public GetWarmerRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public GetWarmerRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public GetWarmerRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public GetWarmerRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>The URL-encoded request definition</summary>
		public GetWarmerRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public GetWarmerRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesOpen
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html
	///</pre>
	///</summary>
	public class OpenIndexRequestParameters : FluentRequestParameters<OpenIndexRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>Explicit operation timeout</summary>
		public OpenIndexRequestParameters Timeout(string timeout) => this.AddQueryString("timeout", timeout);
		
		///<summary>Specify timeout for connection to master</summary>
		public OpenIndexRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public OpenIndexRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public OpenIndexRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public OpenIndexRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>The URL-encoded request definition</summary>
		public OpenIndexRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public OpenIndexRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesOptimizeForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-optimize.html
	///</pre>
	///</summary>
	public class OptimizeRequestParameters : FluentRequestParameters<OptimizeRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>Specify whether the index should be flushed after performing the operation (default: true)</summary>
		public OptimizeRequestParameters Flush(bool flush) => this.AddQueryString("flush", flush);
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public OptimizeRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public OptimizeRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public OptimizeRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>The number of segments the index should be merged into (default: dynamic)</summary>
		public OptimizeRequestParameters MaxNumSegments(long max_num_segments) => this.AddQueryString("max_num_segments", max_num_segments);
		
		///<summary>Specify whether the operation should only expunge deleted documents</summary>
		public OptimizeRequestParameters OnlyExpungeDeletes(bool only_expunge_deletes) => this.AddQueryString("only_expunge_deletes", only_expunge_deletes);
		
		///<summary>TODO: ?</summary>
		public OptimizeRequestParameters OperationThreading(string operation_threading) => this.AddQueryString("operation_threading", operation_threading);
		
		///<summary>Specify whether the request should block until the merge process is finished (default: true)</summary>
		public OptimizeRequestParameters WaitForMerge(bool wait_for_merge) => this.AddQueryString("wait_for_merge", wait_for_merge);
		
		///<summary>The URL-encoded request definition</summary>
		public OptimizeRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public OptimizeRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesPutAlias
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html
	///</pre>
	///</summary>
	public class PutAliasRequestParameters : FluentRequestParameters<PutAliasRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		///<summary>Explicit timestamp for the document</summary>
		public PutAliasRequestParameters Timeout(string timeout) => this.AddQueryString("timeout", timeout);
		
		///<summary>Specify timeout for connection to master</summary>
		public PutAliasRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>The URL-encoded request definition</summary>
		public PutAliasRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public PutAliasRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesPutMapping
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html
	///</pre>
	///</summary>
	public class PutMappingRequestParameters : FluentRequestParameters<PutMappingRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		///<summary>Explicit operation timeout</summary>
		public PutMappingRequestParameters Timeout(string timeout) => this.AddQueryString("timeout", timeout);
		
		///<summary>Specify timeout for connection to master</summary>
		public PutMappingRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public PutMappingRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public PutMappingRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public PutMappingRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>Whether to update the mapping for all fields with the same name across all types or not</summary>
		public PutMappingRequestParameters UpdateAllTypes(bool update_all_types) => this.AddQueryString("update_all_types", update_all_types);
		
		///<summary>The URL-encoded request definition</summary>
		public PutMappingRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public PutMappingRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesPutSettingsForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-update-settings.html
	///</pre>
	///</summary>
	public class UpdateIndexSettingsRequestParameters : FluentRequestParameters<UpdateIndexSettingsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		///<summary>Specify timeout for connection to master</summary>
		public UpdateIndexSettingsRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public UpdateIndexSettingsRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public UpdateIndexSettingsRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public UpdateIndexSettingsRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>Return settings in flat format (default: false)</summary>
		public UpdateIndexSettingsRequestParameters FlatSettings(bool flat_settings) => this.AddQueryString("flat_settings", flat_settings);
		
		///<summary>The URL-encoded request definition</summary>
		public UpdateIndexSettingsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public UpdateIndexSettingsRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesPutTemplateForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html
	///</pre>
	///</summary>
	public class PutIndexTemplateRequestParameters : FluentRequestParameters<PutIndexTemplateRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		///<summary>Whether the index template should only be added if new or can also replace an existing one</summary>
		public PutIndexTemplateRequestParameters Create(bool create) => this.AddQueryString("create", create);
		
		///<summary>Explicit operation timeout</summary>
		public PutIndexTemplateRequestParameters Timeout(string timeout) => this.AddQueryString("timeout", timeout);
		
		///<summary>Specify timeout for connection to master</summary>
		public PutIndexTemplateRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Return settings in flat format (default: false)</summary>
		public PutIndexTemplateRequestParameters FlatSettings(bool flat_settings) => this.AddQueryString("flat_settings", flat_settings);
		
		///<summary>The URL-encoded request definition</summary>
		public PutIndexTemplateRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public PutIndexTemplateRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesPutWarmerForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-warmers.html
	///</pre>
	///</summary>
	public class PutWarmerRequestParameters : FluentRequestParameters<PutWarmerRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		///<summary>Specify timeout for connection to master</summary>
		public PutWarmerRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed) in the search request to warm</summary>
		public PutWarmerRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices in the search request to warm. (This includes `_all` string or when no indices have been specified)</summary>
		public PutWarmerRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both, in the search request to warm.</summary>
		public PutWarmerRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>Specify whether the request to be warmed should use the request cache, defaults to index level setting</summary>
		public PutWarmerRequestParameters RequestCache(bool request_cache) => this.AddQueryString("request_cache", request_cache);
		
		///<summary>The URL-encoded request definition</summary>
		public PutWarmerRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public PutWarmerRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesRecoveryForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-recovery.html
	///</pre>
	///</summary>
	public class RecoveryStatusRequestParameters : FluentRequestParameters<RecoveryStatusRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Whether to display detailed information about shard recovery</summary>
		public RecoveryStatusRequestParameters Detailed(bool detailed) => this.AddQueryString("detailed", detailed);
		
		///<summary>Display only those recoveries that are currently on-going</summary>
		public RecoveryStatusRequestParameters ActiveOnly(bool active_only) => this.AddQueryString("active_only", active_only);
		
		///<summary>Whether to return time and byte values in human-readable format.</summary>
		public RecoveryStatusRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		///<summary>The URL-encoded request definition</summary>
		public RecoveryStatusRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public RecoveryStatusRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesRefreshForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html
	///</pre>
	///</summary>
	public class RefreshRequestParameters : FluentRequestParameters<RefreshRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public RefreshRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public RefreshRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public RefreshRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>Force a refresh even if not required</summary>
		public RefreshRequestParameters Force(bool force) => this.AddQueryString("force", force);
		
		///<summary>TODO: ?</summary>
		public RefreshRequestParameters OperationThreading(string operation_threading) => this.AddQueryString("operation_threading", operation_threading);
		
		///<summary>The URL-encoded request definition</summary>
		public RefreshRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public RefreshRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesSegmentsForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-segments.html
	///</pre>
	///</summary>
	public class SegmentsRequestParameters : FluentRequestParameters<SegmentsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public SegmentsRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public SegmentsRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public SegmentsRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>Whether to return time and byte values in human-readable format.</summary>
		public SegmentsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		///<summary>TODO: ?</summary>
		public SegmentsRequestParameters OperationThreading(string operation_threading) => this.AddQueryString("operation_threading", operation_threading);
		
		///<summary>The URL-encoded request definition</summary>
		public SegmentsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public SegmentsRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesShardStoresForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shards-stores.html
	///</pre>
	///</summary>
	public class IndicesShardStoresRequestParameters : FluentRequestParameters<IndicesShardStoresRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>A comma-separated list of statuses used to filter on shards to get store information for</summary>
		public IndicesShardStoresRequestParameters Status(params string[] status) => this.AddQueryString("status", status);
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public IndicesShardStoresRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public IndicesShardStoresRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public IndicesShardStoresRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>TODO: ?</summary>
		public IndicesShardStoresRequestParameters OperationThreading(string operation_threading) => this.AddQueryString("operation_threading", operation_threading);
		
		///<summary>The URL-encoded request definition</summary>
		public IndicesShardStoresRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public IndicesShardStoresRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesStatsForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html
	///</pre>
	///</summary>
	public class IndicesStatsRequestParameters : FluentRequestParameters<IndicesStatsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
		public IndicesStatsRequestParameters CompletionFields(params string[] completion_fields) => this.AddQueryString("completion_fields", completion_fields);
		
		///<summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
		public IndicesStatsRequestParameters FielddataFields(params string[] fielddata_fields) => this.AddQueryString("fielddata_fields", fielddata_fields);
		
		///<summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
		public IndicesStatsRequestParameters Fields(params string[] fields) => this.AddQueryString("fields", fields);
		
		///<summary>A comma-separated list of search groups for `search` index metric</summary>
		public IndicesStatsRequestParameters Groups(params string[] groups) => this.AddQueryString("groups", groups);
		
		///<summary>Whether to return time and byte values in human-readable format.</summary>
		public IndicesStatsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		///<summary>Return stats aggregated at cluster, index or shard level</summary>
		public IndicesStatsRequestParameters Level(Level level) => this.AddQueryString("level", level);
		
		///<summary>The URL-encoded request definition</summary>
		public IndicesStatsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public IndicesStatsRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesUpdateAliasesForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html
	///</pre>
	///</summary>
	public class BulkAliasRequestParameters : FluentRequestParameters<BulkAliasRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>Request timeout</summary>
		public BulkAliasRequestParameters Timeout(string timeout) => this.AddQueryString("timeout", timeout);
		
		///<summary>Specify timeout for connection to master</summary>
		public BulkAliasRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>The URL-encoded request definition</summary>
		public BulkAliasRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public BulkAliasRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesUpgradeForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-upgrade.html
	///</pre>
	///</summary>
	public class UpgradeRequestParameters : FluentRequestParameters<UpgradeRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public UpgradeRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public UpgradeRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public UpgradeRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Specify whether the request should block until the all segments are upgraded (default: false)</summary>
		public UpgradeRequestParameters WaitForCompletion(bool wait_for_completion) => this.AddQueryString("wait_for_completion", wait_for_completion);
		
		///<summary>If true, only ancient (an older Lucene major release) segments will be upgraded</summary>
		public UpgradeRequestParameters OnlyAncientSegments(bool only_ancient_segments) => this.AddQueryString("only_ancient_segments", only_ancient_segments);
		
		///<summary>The URL-encoded request definition</summary>
		public UpgradeRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public UpgradeRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesValidateQueryForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html
	///</pre>
	///</summary>
	public class ValidateQueryRequestParameters : FluentRequestParameters<ValidateQueryRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>Return detailed information about the error</summary>
		public ValidateQueryRequestParameters Explain(bool explain) => this.AddQueryString("explain", explain);
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public ValidateQueryRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public ValidateQueryRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public ValidateQueryRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>TODO: ?</summary>
		public ValidateQueryRequestParameters OperationThreading(string operation_threading) => this.AddQueryString("operation_threading", operation_threading);
		
		///<summary>Query in the Lucene query string syntax</summary>
		public ValidateQueryRequestParameters QueryOnQueryString(string query_on_query_string) => this.AddQueryString("q", query_on_query_string);
		
		///<summary>The analyzer to use for the query string</summary>
		public ValidateQueryRequestParameters Analyzer(string analyzer) => this.AddQueryString("analyzer", analyzer);
		
		///<summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
		public ValidateQueryRequestParameters AnalyzeWildcard(bool analyze_wildcard) => this.AddQueryString("analyze_wildcard", analyze_wildcard);
		
		///<summary>The default operator for query string query (AND or OR)</summary>
		public ValidateQueryRequestParameters DefaultOperator(DefaultOperator default_operator) => this.AddQueryString("default_operator", default_operator);
		
		///<summary>The field to use as default where no field prefix is given in the query string</summary>
		public ValidateQueryRequestParameters Df(string df) => this.AddQueryString("df", df);
		
		///<summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
		public ValidateQueryRequestParameters Lenient(bool lenient) => this.AddQueryString("lenient", lenient);
		
		///<summary>Specify whether query terms should be lowercased</summary>
		public ValidateQueryRequestParameters LowercaseExpandedTerms(bool lowercase_expanded_terms) => this.AddQueryString("lowercase_expanded_terms", lowercase_expanded_terms);
		
		///<summary>Provide a more detailed explanation showing the actual Lucene query that will be executed.</summary>
		public ValidateQueryRequestParameters Rewrite(bool rewrite) => this.AddQueryString("rewrite", rewrite);
		
		///<summary>The URL-encoded request definition</summary>
		public ValidateQueryRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public ValidateQueryRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Info
	///<pre>
	///http://www.elastic.co/guide/
	///</pre>
	///</summary>
	public class RootNodeInfoRequestParameters : FluentRequestParameters<RootNodeInfoRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>The URL-encoded request definition</summary>
		public RootNodeInfoRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public RootNodeInfoRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Mget
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html
	///</pre>
	///</summary>
	public class MultiGetRequestParameters : FluentRequestParameters<MultiGetRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>A comma-separated list of fields to return in the response</summary>
		public MultiGetRequestParameters Fields(params string[] fields) => this.AddQueryString("fields", fields);
		
		///<summary>Specify the node or shard the operation should be performed on (default: random)</summary>
		public MultiGetRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		///<summary>Specify whether to perform the operation in realtime or search mode</summary>
		public MultiGetRequestParameters Realtime(bool realtime) => this.AddQueryString("realtime", realtime);
		
		///<summary>Refresh the shard containing the document before performing the operation</summary>
		public MultiGetRequestParameters Refresh(bool refresh) => this.AddQueryString("refresh", refresh);
		
		///<summary>True or false to return the _source field or not, or a list of fields to return</summary>
		public MultiGetRequestParameters SourceEnabled(params string[] source_enabled) => this.AddQueryString("_source", source_enabled);
		
		///<summary>A list of fields to exclude from the returned _source field</summary>
		public MultiGetRequestParameters SourceExclude(params string[] source_exclude) => this.AddQueryString("_source_exclude", source_exclude);
		
		///<summary>A list of fields to extract and return from the _source field</summary>
		public MultiGetRequestParameters SourceInclude(params string[] source_include) => this.AddQueryString("_source_include", source_include);
		
		///<summary>The URL-encoded request definition</summary>
		public MultiGetRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public MultiGetRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Mpercolate
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-percolate.html
	///</pre>
	///</summary>
	public class MultiPercolateRequestParameters : FluentRequestParameters<MultiPercolateRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public MultiPercolateRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public MultiPercolateRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public MultiPercolateRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>The URL-encoded request definition</summary>
		public MultiPercolateRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public MultiPercolateRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Msearch
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html
	///</pre>
	///</summary>
	public class MultiSearchRequestParameters : FluentRequestParameters<MultiSearchRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>Search operation type</summary>
		public MultiSearchRequestParameters SearchType(SearchType search_type) => this.AddQueryString("search_type", search_type);
		
		///<summary>The URL-encoded request definition</summary>
		public MultiSearchRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public MultiSearchRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Mtermvectors
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html
	///</pre>
	///</summary>
	public class MultiTermVectorsRequestParameters : FluentRequestParameters<MultiTermVectorsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
		public MultiTermVectorsRequestParameters TermStatistics(bool term_statistics) => this.AddQueryString("term_statistics", term_statistics);
		
		///<summary>Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
		public MultiTermVectorsRequestParameters FieldStatistics(bool field_statistics) => this.AddQueryString("field_statistics", field_statistics);
		
		///<summary>A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
		public MultiTermVectorsRequestParameters Fields(params string[] fields) => this.AddQueryString("fields", fields);
		
		///<summary>Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
		public MultiTermVectorsRequestParameters Offsets(bool offsets) => this.AddQueryString("offsets", offsets);
		
		///<summary>Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
		public MultiTermVectorsRequestParameters Positions(bool positions) => this.AddQueryString("positions", positions);
		
		///<summary>Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
		public MultiTermVectorsRequestParameters Payloads(bool payloads) => this.AddQueryString("payloads", payloads);
		
		///<summary>Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
		public MultiTermVectorsRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		///<summary>Specific routing value. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
		public MultiTermVectorsRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		///<summary>Parent id of documents. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
		public MultiTermVectorsRequestParameters Parent(string parent) => this.AddQueryString("parent", parent);
		
		///<summary>Specifies if requests are real-time as opposed to near-real-time (default: true).</summary>
		public MultiTermVectorsRequestParameters Realtime(bool realtime) => this.AddQueryString("realtime", realtime);
		
		///<summary>Explicit version number for concurrency control</summary>
		public MultiTermVectorsRequestParameters Version(long version) => this.AddQueryString("version", version);
		
		///<summary>Specific version type</summary>
		public MultiTermVectorsRequestParameters VersionType(VersionType version_type) => this.AddQueryString("version_type", version_type);
		
		///<summary>The URL-encoded request definition</summary>
		public MultiTermVectorsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public MultiTermVectorsRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for NodesHotThreadsForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html
	///</pre>
	///</summary>
	public class NodesHotThreadsRequestParameters : FluentRequestParameters<NodesHotThreadsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>The interval for the second sampling of threads</summary>
		public NodesHotThreadsRequestParameters Interval(string interval) => this.AddQueryString("interval", interval);
		
		///<summary>Number of samples of thread stacktrace (default: 10)</summary>
		public NodesHotThreadsRequestParameters Snapshots(long snapshots) => this.AddQueryString("snapshots", snapshots);
		
		///<summary>Specify the number of threads to provide information for (default: 3)</summary>
		public NodesHotThreadsRequestParameters Threads(long threads) => this.AddQueryString("threads", threads);
		
		///<summary>Don&#39;t show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)</summary>
		public NodesHotThreadsRequestParameters IgnoreIdleThreads(bool ignore_idle_threads) => this.AddQueryString("ignore_idle_threads", ignore_idle_threads);
		
		///<summary>The type to sample (default: cpu)</summary>
		public NodesHotThreadsRequestParameters ThreadType(ThreadType thread_type) => this.AddQueryString("type", thread_type);
		
		///<summary>Explicit operation timeout</summary>
		public NodesHotThreadsRequestParameters Timeout(string timeout) => this.AddQueryString("timeout", timeout);
		
		///<summary>The URL-encoded request definition</summary>
		public NodesHotThreadsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public NodesHotThreadsRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for NodesInfoForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html
	///</pre>
	///</summary>
	public class NodesInfoRequestParameters : FluentRequestParameters<NodesInfoRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Return settings in flat format (default: false)</summary>
		public NodesInfoRequestParameters FlatSettings(bool flat_settings) => this.AddQueryString("flat_settings", flat_settings);
		
		///<summary>Whether to return time and byte values in human-readable format.</summary>
		public NodesInfoRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		///<summary>Explicit operation timeout</summary>
		public NodesInfoRequestParameters Timeout(string timeout) => this.AddQueryString("timeout", timeout);
		
		///<summary>The URL-encoded request definition</summary>
		public NodesInfoRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public NodesInfoRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for NodesStatsForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html
	///</pre>
	///</summary>
	public class NodesStatsRequestParameters : FluentRequestParameters<NodesStatsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
		public NodesStatsRequestParameters CompletionFields(params string[] completion_fields) => this.AddQueryString("completion_fields", completion_fields);
		
		///<summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
		public NodesStatsRequestParameters FielddataFields(params string[] fielddata_fields) => this.AddQueryString("fielddata_fields", fielddata_fields);
		
		///<summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
		public NodesStatsRequestParameters Fields(params string[] fields) => this.AddQueryString("fields", fields);
		
		///<summary>A comma-separated list of search groups for `search` index metric</summary>
		public NodesStatsRequestParameters Groups(bool groups) => this.AddQueryString("groups", groups);
		
		///<summary>Whether to return time and byte values in human-readable format.</summary>
		public NodesStatsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		///<summary>Return indices stats aggregated at node, index or shard level</summary>
		public NodesStatsRequestParameters Level(Level level) => this.AddQueryString("level", level);
		
		///<summary>A comma-separated list of document types for the `indexing` index metric</summary>
		public NodesStatsRequestParameters Types(params string[] types) => this.AddQueryString("types", types);
		
		///<summary>Explicit operation timeout</summary>
		public NodesStatsRequestParameters Timeout(string timeout) => this.AddQueryString("timeout", timeout);
		
		///<summary>The URL-encoded request definition</summary>
		public NodesStatsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public NodesStatsRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Percolate
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-percolate.html
	///</pre>
	///</summary>
	public class PercolateRequestParameters : FluentRequestParameters<PercolateRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>A comma-separated list of specific routing values</summary>
		public PercolateRequestParameters Routing(params string[] routing) => this.AddQueryString("routing", routing);
		
		///<summary>Specify the node or shard the operation should be performed on (default: random)</summary>
		public PercolateRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public PercolateRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public PercolateRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public PercolateRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>The index to percolate the document into. Defaults to index.</summary>
		public PercolateRequestParameters PercolateIndex(string percolate_index) => this.AddQueryString("percolate_index", percolate_index);
		
		///<summary>The type to percolate document into. Defaults to type.</summary>
		public PercolateRequestParameters PercolateType(string percolate_type) => this.AddQueryString("percolate_type", percolate_type);
		
		///<summary>The routing value to use when percolating the existing document.</summary>
		public PercolateRequestParameters PercolateRouting(string percolate_routing) => this.AddQueryString("percolate_routing", percolate_routing);
		
		///<summary>Which shard to prefer when executing the percolate request.</summary>
		public PercolateRequestParameters PercolatePreference(string percolate_preference) => this.AddQueryString("percolate_preference", percolate_preference);
		
		///<summary>Return an array of matching query IDs instead of objects</summary>
		public PercolateRequestParameters PercolateFormat(PercolateFormat percolate_format) => this.AddQueryString("percolate_format", percolate_format);
		
		///<summary>Explicit version number for concurrency control</summary>
		public PercolateRequestParameters Version(long version) => this.AddQueryString("version", version);
		
		///<summary>Specific version type</summary>
		public PercolateRequestParameters VersionType(VersionType version_type) => this.AddQueryString("version_type", version_type);
		
		///<summary>The URL-encoded request definition</summary>
		public PercolateRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public PercolateRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Ping
	///<pre>
	///http://www.elastic.co/guide/
	///</pre>
	///</summary>
	public class PingRequestParameters : FluentRequestParameters<PingRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.HEAD;
		///<summary>The URL-encoded request definition</summary>
		public PingRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public PingRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for PutScript
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html
	///</pre>
	///</summary>
	public class PutScriptRequestParameters : FluentRequestParameters<PutScriptRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		///<summary>Explicit operation type</summary>
		public PutScriptRequestParameters OpType(OpType op_type) => this.AddQueryString("op_type", op_type);
		
		///<summary>Explicit version number for concurrency control</summary>
		public PutScriptRequestParameters Version(long version) => this.AddQueryString("version", version);
		
		///<summary>Specific version type</summary>
		public PutScriptRequestParameters VersionType(VersionType version_type) => this.AddQueryString("version_type", version_type);
		
		///<summary>The URL-encoded request definition</summary>
		public PutScriptRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public PutScriptRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for PutTemplate
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-template.html
	///</pre>
	///</summary>
	public class PutSearchTemplateRequestParameters : FluentRequestParameters<PutSearchTemplateRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		///<summary>Explicit operation type</summary>
		public PutSearchTemplateRequestParameters OpType(OpType op_type) => this.AddQueryString("op_type", op_type);
		
		///<summary>Explicit version number for concurrency control</summary>
		public PutSearchTemplateRequestParameters Version(long version) => this.AddQueryString("version", version);
		
		///<summary>Specific version type</summary>
		public PutSearchTemplateRequestParameters VersionType(VersionType version_type) => this.AddQueryString("version_type", version_type);
		
		///<summary>The URL-encoded request definition</summary>
		public PutSearchTemplateRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public PutSearchTemplateRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for RenderSearchTemplate
	///<pre>
	///http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html
	///</pre>
	///</summary>
	public class RenderSearchTemplateRequestParameters : FluentRequestParameters<RenderSearchTemplateRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>The URL-encoded request definition</summary>
		public RenderSearchTemplateRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public RenderSearchTemplateRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Scroll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-scroll.html
	///</pre>
	///</summary>
	public class ScrollRequestParameters : FluentRequestParameters<ScrollRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>The URL-encoded request definition</summary>
		public ScrollRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public ScrollRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Search
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html
	///</pre>
	///</summary>
	public class SearchRequestParameters : FluentRequestParameters<SearchRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>The analyzer to use for the query string</summary>
		public SearchRequestParameters Analyzer(string analyzer) => this.AddQueryString("analyzer", analyzer);
		
		///<summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
		public SearchRequestParameters AnalyzeWildcard(bool analyze_wildcard) => this.AddQueryString("analyze_wildcard", analyze_wildcard);
		
		///<summary>The default operator for query string query (AND or OR)</summary>
		public SearchRequestParameters DefaultOperator(DefaultOperator default_operator) => this.AddQueryString("default_operator", default_operator);
		
		///<summary>The field to use as default where no field prefix is given in the query string</summary>
		public SearchRequestParameters Df(string df) => this.AddQueryString("df", df);
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public SearchRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public SearchRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public SearchRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
		public SearchRequestParameters Lenient(bool lenient) => this.AddQueryString("lenient", lenient);
		
		///<summary>Specify whether query terms should be lowercased</summary>
		public SearchRequestParameters LowercaseExpandedTerms(bool lowercase_expanded_terms) => this.AddQueryString("lowercase_expanded_terms", lowercase_expanded_terms);
		
		///<summary>Specify the node or shard the operation should be performed on (default: random)</summary>
		public SearchRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		///<summary>A comma-separated list of specific routing values</summary>
		public SearchRequestParameters Routing(params string[] routing) => this.AddQueryString("routing", routing);
		
		///<summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
		public SearchRequestParameters Scroll(string scroll) => this.AddQueryString("scroll", scroll);
		
		///<summary>Search operation type</summary>
		public SearchRequestParameters SearchType(SearchType search_type) => this.AddQueryString("search_type", search_type);
		
		///<summary>Specific &#39;tag&#39; of the request for logging and statistical purposes</summary>
		public SearchRequestParameters Stats(params string[] stats) => this.AddQueryString("stats", stats);
		
		///<summary>Specify which field to use for suggestions</summary>
		public SearchRequestParameters SuggestField(string suggest_field) => this.AddQueryString("suggest_field", suggest_field);
		
		///<summary>Specify suggest mode</summary>
		public SearchRequestParameters SuggestMode(SuggestMode suggest_mode) => this.AddQueryString("suggest_mode", suggest_mode);
		
		///<summary>How many suggestions to return in response</summary>
		public SearchRequestParameters SuggestSize(long suggest_size) => this.AddQueryString("suggest_size", suggest_size);
		
		///<summary>The source text for which the suggestions should be returned</summary>
		public SearchRequestParameters SuggestText(string suggest_text) => this.AddQueryString("suggest_text", suggest_text);
		
		///<summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
		public SearchRequestParameters RequestCache(bool request_cache) => this.AddQueryString("request_cache", request_cache);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public SearchRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for SearchExists
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-exists.html
	///</pre>
	///</summary>
	public class SearchExistsRequestParameters : FluentRequestParameters<SearchExistsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public SearchExistsRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public SearchExistsRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public SearchExistsRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>Include only documents with a specific `_score` value in the result</summary>
		public SearchExistsRequestParameters MinScore(double min_score) => this.AddQueryString("min_score", min_score);
		
		///<summary>Specify the node or shard the operation should be performed on (default: random)</summary>
		public SearchExistsRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		///<summary>Specific routing value</summary>
		public SearchExistsRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		///<summary>Query in the Lucene query string syntax</summary>
		public SearchExistsRequestParameters QueryOnQueryString(string query_on_query_string) => this.AddQueryString("q", query_on_query_string);
		
		///<summary>The analyzer to use for the query string</summary>
		public SearchExistsRequestParameters Analyzer(string analyzer) => this.AddQueryString("analyzer", analyzer);
		
		///<summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
		public SearchExistsRequestParameters AnalyzeWildcard(bool analyze_wildcard) => this.AddQueryString("analyze_wildcard", analyze_wildcard);
		
		///<summary>The default operator for query string query (AND or OR)</summary>
		public SearchExistsRequestParameters DefaultOperator(DefaultOperator default_operator) => this.AddQueryString("default_operator", default_operator);
		
		///<summary>The field to use as default where no field prefix is given in the query string</summary>
		public SearchExistsRequestParameters Df(string df) => this.AddQueryString("df", df);
		
		///<summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
		public SearchExistsRequestParameters Lenient(bool lenient) => this.AddQueryString("lenient", lenient);
		
		///<summary>Specify whether query terms should be lowercased</summary>
		public SearchExistsRequestParameters LowercaseExpandedTerms(bool lowercase_expanded_terms) => this.AddQueryString("lowercase_expanded_terms", lowercase_expanded_terms);
		
		///<summary>The URL-encoded request definition</summary>
		public SearchExistsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public SearchExistsRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for SearchShards
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html
	///</pre>
	///</summary>
	public class SearchShardsRequestParameters : FluentRequestParameters<SearchShardsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>Specify the node or shard the operation should be performed on (default: random)</summary>
		public SearchShardsRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		///<summary>Specific routing value</summary>
		public SearchShardsRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public SearchShardsRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public SearchShardsRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public SearchShardsRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public SearchShardsRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>The URL-encoded request definition</summary>
		public SearchShardsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public SearchShardsRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for SearchTemplate
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html
	///</pre>
	///</summary>
	public class SearchTemplateRequestParameters : FluentRequestParameters<SearchTemplateRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public SearchTemplateRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public SearchTemplateRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public SearchTemplateRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>Specify the node or shard the operation should be performed on (default: random)</summary>
		public SearchTemplateRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		///<summary>A comma-separated list of specific routing values</summary>
		public SearchTemplateRequestParameters Routing(params string[] routing) => this.AddQueryString("routing", routing);
		
		///<summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
		public SearchTemplateRequestParameters Scroll(string scroll) => this.AddQueryString("scroll", scroll);
		
		///<summary>Search operation type</summary>
		public SearchTemplateRequestParameters SearchType(SearchType search_type) => this.AddQueryString("search_type", search_type);
		
		///<summary>The URL-encoded request definition</summary>
		public SearchTemplateRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public SearchTemplateRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for SnapshotCreate
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html
	///</pre>
	///</summary>
	public class SnapshotRequestParameters : FluentRequestParameters<SnapshotRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		///<summary>Explicit operation timeout for connection to master node</summary>
		public SnapshotRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Should this request wait until the operation has completed before returning</summary>
		public SnapshotRequestParameters WaitForCompletion(bool wait_for_completion) => this.AddQueryString("wait_for_completion", wait_for_completion);
		
		///<summary>The URL-encoded request definition</summary>
		public SnapshotRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public SnapshotRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for SnapshotCreateRepository
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html
	///</pre>
	///</summary>
	public class CreateRepositoryRequestParameters : FluentRequestParameters<CreateRepositoryRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CreateRepositoryRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Explicit operation timeout</summary>
		public CreateRepositoryRequestParameters Timeout(string timeout) => this.AddQueryString("timeout", timeout);
		
		///<summary>Whether to verify the repository after creation</summary>
		public CreateRepositoryRequestParameters Verify(bool verify) => this.AddQueryString("verify", verify);
		
		///<summary>The URL-encoded request definition</summary>
		public CreateRepositoryRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public CreateRepositoryRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for SnapshotDelete
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html
	///</pre>
	///</summary>
	public class DeleteSnapshotRequestParameters : FluentRequestParameters<DeleteSnapshotRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
		///<summary>Explicit operation timeout for connection to master node</summary>
		public DeleteSnapshotRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>The URL-encoded request definition</summary>
		public DeleteSnapshotRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public DeleteSnapshotRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for SnapshotDeleteRepository
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html
	///</pre>
	///</summary>
	public class DeleteRepositoryRequestParameters : FluentRequestParameters<DeleteRepositoryRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
		///<summary>Explicit operation timeout for connection to master node</summary>
		public DeleteRepositoryRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Explicit operation timeout</summary>
		public DeleteRepositoryRequestParameters Timeout(string timeout) => this.AddQueryString("timeout", timeout);
		
		///<summary>The URL-encoded request definition</summary>
		public DeleteRepositoryRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public DeleteRepositoryRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for SnapshotGet
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html
	///</pre>
	///</summary>
	public class GetSnapshotRequestParameters : FluentRequestParameters<GetSnapshotRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Explicit operation timeout for connection to master node</summary>
		public GetSnapshotRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>The URL-encoded request definition</summary>
		public GetSnapshotRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public GetSnapshotRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for SnapshotGetRepository
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html
	///</pre>
	///</summary>
	public class GetRepositoryRequestParameters : FluentRequestParameters<GetRepositoryRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Explicit operation timeout for connection to master node</summary>
		public GetRepositoryRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public GetRepositoryRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		///<summary>The URL-encoded request definition</summary>
		public GetRepositoryRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public GetRepositoryRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for SnapshotRestore
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html
	///</pre>
	///</summary>
	public class RestoreRequestParameters : FluentRequestParameters<RestoreRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>Explicit operation timeout for connection to master node</summary>
		public RestoreRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Should this request wait until the operation has completed before returning</summary>
		public RestoreRequestParameters WaitForCompletion(bool wait_for_completion) => this.AddQueryString("wait_for_completion", wait_for_completion);
		
		///<summary>The URL-encoded request definition</summary>
		public RestoreRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public RestoreRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for SnapshotStatus
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html
	///</pre>
	///</summary>
	public class SnapshotStatusRequestParameters : FluentRequestParameters<SnapshotStatusRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		///<summary>Explicit operation timeout for connection to master node</summary>
		public SnapshotStatusRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>The URL-encoded request definition</summary>
		public SnapshotStatusRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public SnapshotStatusRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for SnapshotVerifyRepository
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html
	///</pre>
	///</summary>
	public class VerifyRepositoryRequestParameters : FluentRequestParameters<VerifyRepositoryRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>Explicit operation timeout for connection to master node</summary>
		public VerifyRepositoryRequestParameters MasterTimeout(string master_timeout) => this.AddQueryString("master_timeout", master_timeout);
		
		///<summary>Explicit operation timeout</summary>
		public VerifyRepositoryRequestParameters Timeout(string timeout) => this.AddQueryString("timeout", timeout);
		
		///<summary>The URL-encoded request definition</summary>
		public VerifyRepositoryRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public VerifyRepositoryRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Suggest
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-suggesters.html
	///</pre>
	///</summary>
	public class SuggestRequestParameters : FluentRequestParameters<SuggestRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public SuggestRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public SuggestRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public SuggestRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		///<summary>Specify the node or shard the operation should be performed on (default: random)</summary>
		public SuggestRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		///<summary>Specific routing value</summary>
		public SuggestRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		///<summary>The URL-encoded request definition</summary>
		public SuggestRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public SuggestRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Termvectors
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html
	///</pre>
	///</summary>
	public class TermVectorsRequestParameters : FluentRequestParameters<TermVectorsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>Specifies if total term frequency and document frequency should be returned.</summary>
		public TermVectorsRequestParameters TermStatistics(bool term_statistics) => this.AddQueryString("term_statistics", term_statistics);
		
		///<summary>Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned.</summary>
		public TermVectorsRequestParameters FieldStatistics(bool field_statistics) => this.AddQueryString("field_statistics", field_statistics);
		
		///<summary>Specifies if distributed frequencies should be returned instead shard frequencies.</summary>
		public TermVectorsRequestParameters Dfs(bool dfs) => this.AddQueryString("dfs", dfs);
		
		///<summary>A comma-separated list of fields to return.</summary>
		public TermVectorsRequestParameters Fields(params string[] fields) => this.AddQueryString("fields", fields);
		
		///<summary>Specifies if term offsets should be returned.</summary>
		public TermVectorsRequestParameters Offsets(bool offsets) => this.AddQueryString("offsets", offsets);
		
		///<summary>Specifies if term positions should be returned.</summary>
		public TermVectorsRequestParameters Positions(bool positions) => this.AddQueryString("positions", positions);
		
		///<summary>Specifies if term payloads should be returned.</summary>
		public TermVectorsRequestParameters Payloads(bool payloads) => this.AddQueryString("payloads", payloads);
		
		///<summary>Specify the node or shard the operation should be performed on (default: random).</summary>
		public TermVectorsRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		///<summary>Specific routing value.</summary>
		public TermVectorsRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		///<summary>Parent id of documents.</summary>
		public TermVectorsRequestParameters Parent(string parent) => this.AddQueryString("parent", parent);
		
		///<summary>Specifies if request is real-time as opposed to near-real-time (default: true).</summary>
		public TermVectorsRequestParameters Realtime(bool realtime) => this.AddQueryString("realtime", realtime);
		
		///<summary>Explicit version number for concurrency control</summary>
		public TermVectorsRequestParameters Version(long version) => this.AddQueryString("version", version);
		
		///<summary>Specific version type</summary>
		public TermVectorsRequestParameters VersionType(VersionType version_type) => this.AddQueryString("version_type", version_type);
		
		///<summary>The URL-encoded request definition</summary>
		public TermVectorsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public TermVectorsRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Update
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html
	///</pre>
	///</summary>
	public class UpdateRequestParameters : FluentRequestParameters<UpdateRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		///<summary>Explicit write consistency setting for the operation</summary>
		public UpdateRequestParameters Consistency(Consistency consistency) => this.AddQueryString("consistency", consistency);
		
		///<summary>The script language (default: groovy)</summary>
		public UpdateRequestParameters Lang(string lang) => this.AddQueryString("lang", lang);
		
		///<summary>ID of the parent document. Is is only used for routing and when for the upsert request</summary>
		public UpdateRequestParameters Parent(string parent) => this.AddQueryString("parent", parent);
		
		///<summary>Refresh the index after performing the operation</summary>
		public UpdateRequestParameters Refresh(bool refresh) => this.AddQueryString("refresh", refresh);
		
		///<summary>Specify how many times should the operation be retried when a conflict occurs (default: 0)</summary>
		public UpdateRequestParameters RetryOnConflict(long retry_on_conflict) => this.AddQueryString("retry_on_conflict", retry_on_conflict);
		
		///<summary>Specific routing value</summary>
		public UpdateRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		///<summary>The URL-encoded script definition (instead of using request body)</summary>
		public UpdateRequestParameters Script(string script) => this.AddQueryString("script", script);
		
		///<summary>The id of a stored script</summary>
		public UpdateRequestParameters ScriptId(string script_id) => this.AddQueryString("script_id", script_id);
		
		///<summary>True if the script referenced in script or script_id should be called to perform inserts - defaults to false</summary>
		public UpdateRequestParameters ScriptedUpsert(bool scripted_upsert) => this.AddQueryString("scripted_upsert", scripted_upsert);
		
		///<summary>Explicit operation timeout</summary>
		public UpdateRequestParameters Timeout(string timeout) => this.AddQueryString("timeout", timeout);
		
		///<summary>Explicit timestamp for the document</summary>
		public UpdateRequestParameters Timestamp(string timestamp) => this.AddQueryString("timestamp", timestamp);
		
		///<summary>Expiration time for the document</summary>
		public UpdateRequestParameters Ttl(string ttl) => this.AddQueryString("ttl", ttl);
		
		///<summary>Explicit version number for concurrency control</summary>
		public UpdateRequestParameters Version(long version) => this.AddQueryString("version", version);
		
		///<summary>Specific version type</summary>
		public UpdateRequestParameters VersionType(VersionType version_type) => this.AddQueryString("version_type", version_type);
		
		///<summary>Specifying as true will cause Elasticsearch to check if there are changes and, if there aren&#226;€™t, turn the update request into a noop.</summary>
		public UpdateRequestParameters DetectNoop(bool detect_noop) => this.AddQueryString("detect_noop", detect_noop);
		
		///<summary>The URL-encoded request definition</summary>
		public UpdateRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		///<summary>Comma separated list of filters used to reduce the response returned by Elasticsearch</summary>
		public UpdateRequestParameters FilterPath(string filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
}